# Docker Compose file Reference (https://docs.docker.com/compose/compose-file/)

version: '3.7'

# Define services
services:
  # App backend service
  # server:
  #   # Configuration for building the docker image for the backend service
  #   build:
  #     context: server # Use an image built from the specified dockerfile in the `server` directory.
  #     dockerfile: Dockerfile
  #   ports:
  #     - "8080:8080" # Forward the exposed port 8080 on the container to port 8080 on the host machine
  #   restart: always
  #   depends_on: 
  #     - db # This service depends on mysql. Start that first.
  #   environment: # Pass environment variables to the service
  #     SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/alphabet?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
  #     SPRING_DATASOURCE_USERNAME: root
  #     SPRING_DATASOURCE_PASSWORD: root
  #   networks: # Networks to join (Services on the same network can communicate with each other using their name)
  #     - backend
  #     - frontend

  # BackEnd Service
  server:
    build:
      dockerfile: Dockerfile.dev
      context: ./server
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/alphabet?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      CHOKIDAR_USEPOLLING: "true"
    depends_on:
      - db
    restart: always
    networks: 
      - backend
      - frontend
  # Frontend Service 
  client:
    build:
      dockerfile: Dockerfile.dev
      context: ./client
    environment:
      CHOKIDAR_USEPOLLING: "true"
    ports:
       - "3000:3000"
    volumes:
      - /app/node_modules
      - ./client:/app
    restart: always
    depends_on:
      - server
    networks:
      - frontend  

  # Database Service (Mysql)
  db:
    image: mysql:5.7
    ports:
      - "3306:3306"
    restart: always
    environment:
      MYSQL_DATABASE: alphabet
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - backend  
  
# Volumes
volumes:
  db-data:

# Networks to be created to facilitate communication between containers
networks:
  backend:
  frontend:    